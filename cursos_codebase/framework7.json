{
    "id": "framework7",
    "name": "Curso intensivo de Framework7",
    "description": "Aprende Framework7 para crear aplicaciones móviles híbridas con apariencia nativa usando HTML, CSS y JavaScript 📲.",
    "modulos": [
        {
            "id": 1,
            "title": "Introducción a Framework7",
            "description": "Conocerás qué es Framework7, sus características y cómo instalarlo.",
            "lecciones": [
                {
                    "id": "a1",
                    "title": "¿Qué es Framework7?",
                    "explicacion": "Framework7 es un framework front-end para desarrollar aplicaciones móviles híbridas con apariencia nativa para iOS y Android usando HTML, CSS y JavaScript."
                },
                {
                    "id": "a2",
                    "title": "Características principales",
                    "explicacion": "Ofrece componentes UI listos, soporte para iOS y Android, navegación tipo página única (SPA), integración con Cordova/Capacitor y compatibilidad con Vue, React y Svelte."
                },
                {
                    "id": "a3",
                    "title": "Instalación",
                    "explicacion": "Se puede instalar usando npm (`npm install framework7`) o descargando el paquete desde el sitio oficial. También puedes usar plantillas preconfiguradas para empezar rápido."
                }
            ],
            "video": "",
            "dato": "Framework7 permite crear apps híbridas con apariencia nativa sin necesidad de aprender Swift o Kotlin."
        },
        {
            "id": 2,
            "title": "Estructura de un proyecto",
            "description": "Aprenderás a organizar un proyecto Framework7 y conocer la estructura de archivos.",
            "lecciones": [
                {
                    "id": "b1",
                    "title": "Archivos principales",
                    "explicacion": "Un proyecto Framework7 típico incluye `index.html`, `css/`, `js/` y `img/`. También se incluyen archivos de configuración como `package.json` si se usa npm."
                },
                {
                    "id": "b2",
                    "title": "Carpetas y componentes",
                    "explicacion": "Se recomienda organizar carpetas para páginas (`pages/`), componentes (`components/`) y rutas (`routes.js`) para mantener el proyecto limpio y escalable."
                },
                {
                    "id": "b3",
                    "title": "Configuración inicial",
                    "explicacion": "En `app.js` se inicializa la app con `new Framework7({ root: '#app', routes: routes });`. Aquí también se configuran temas, animaciones y opciones globales."
                }
            ],
            "video": "",
            "dato": "Tener una estructura organizada facilita el mantenimiento y la escalabilidad de tus apps."
        },
        {
            "id": 3,
            "title": "Componentes UI y páginas",
            "description": "Aprenderás a usar los componentes nativos que ofrece Framework7 y crear páginas funcionales.",
            "lecciones": [
                {
                    "id": "c1",
                    "title": "Páginas y navegación",
                    "explicacion": "Framework7 usa navegación tipo SPA. Cada página se define en HTML y se registra en las rutas. Los enlaces internos usan `f7-link` para animaciones y transiciones suaves."
                },
                {
                    "id": "c2",
                    "title": "Botones, listas y tarjetas",
                    "explicacion": "Framework7 incluye botones (`f7-button`), listas (`list`), tarjetas (`card`) y muchos otros componentes con estilos nativos que puedes personalizar con CSS."
                },
                {
                    "id": "c3",
                    "title": "Popups, modales y notificaciones",
                    "explicacion": "Puedes mostrar información adicional con `popup`, alertas con `alert` y notificaciones usando `app.notification.create({})`. Todo esto con animaciones nativas."
                }
            ],
            "video": "",
            "dato": "Los componentes UI nativos aceleran el desarrollo y mejoran la experiencia de usuario."
        },
        {
            "id": 4,
            "title": "Eventos y manejo de datos",
            "description": "Aprenderás a manejar interacciones del usuario y manipular datos en tu app.",
            "lecciones": [
                {
                    "id": "d1",
                    "title": "Eventos en Framework7",
                    "explicacion": "Puedes usar eventos como `click`, `page:init` o `input` para ejecutar funciones. Ejemplo: `$$('.button').on('click', () => { app.dialog.alert('Hola'); });`"
                },
                {
                    "id": "d2",
                    "title": "Formularios y validación",
                    "explicacion": "Framework7 facilita trabajar con formularios y validaciones usando `f7-form` y eventos de entrada para comprobar datos antes de enviarlos."
                },
                {
                    "id": "d3",
                    "title": "Datos dinámicos",
                    "explicacion": "Puedes usar arrays y objetos para generar contenido dinámico en listas, tarjetas y componentes. También puedes integrar APIs externas usando `fetch` o Axios."
                }
            ],
            "video": "",
            "dato": "El manejo de eventos y datos permite crear apps interactivas y dinámicas, sin depender del backend todo el tiempo."
        },
        {
            "id": 5,
            "title": "Integración con backend",
            "description": "Aprenderás a conectar tu app Framework7 con APIs y bases de datos externas.",
            "lecciones": [
                {
                    "id": "e1",
                    "title": "Consumiendo APIs REST",
                    "explicacion": "Usa `fetch` o Axios para obtener datos de un servidor: `fetch('https://api.example.com/data').then(res => res.json()).then(data => console.log(data));`"
                },
                {
                    "id": "e2",
                    "title": "Autenticación y sesiones",
                    "explicacion": "Framework7 se integra con JWT o cookies para manejar sesiones de usuario y proteger rutas."
                },
                {
                    "id": "e3",
                    "title": "Persistencia local",
                    "explicacion": "Puedes almacenar datos en `localStorage`, `sessionStorage` o usar IndexedDB para mantener información en la app sin conexión."
                }
            ],
            "video": "",
            "dato": "Integrar tu app con un backend y persistencia local permite crear apps completas y funcionales incluso sin conexión constante."
        },
        {
            "id": 6,
            "title": "Buenas prácticas y optimización",
            "description": "Aprenderás a escribir apps Framework7 eficientes, limpias y fáciles de mantener.",
            "lecciones": [
                {
                    "id": "f1",
                    "title": "Organización de proyectos",
                    "explicacion": "Separar páginas, componentes y rutas, usar ES Modules y mantener CSS modular facilita mantenimiento y escalabilidad."
                },
                {
                    "id": "f2",
                    "title": "Optimización de rendimiento",
                    "explicacion": "Minimiza CSS/JS, carga recursos bajo demanda, y usa `virtual lists` para manejar grandes cantidades de datos eficientemente."
                },
                {
                    "id": "f3",
                    "title": "Testing y depuración",
                    "explicacion": "Usa DevTools, emuladores y logging para detectar errores y mejorar la estabilidad de tus apps."
                }
            ],
            "video": "",
            "dato": "Apps bien organizadas y optimizadas brindan una experiencia de usuario fluida y profesional."
        }
    ]
}
