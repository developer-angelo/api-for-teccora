{
    "id": "php",
    "name": "Curso intensivo de PHP",
    "description": "Aprende PHP, el lenguaje de programaci√≥n del lado del servidor que impulsa millones de sitios web, incluyendo WordPress y plataformas din√°micas üñ•Ô∏è.",
    "modulos": [
        {
            "id": 1,
            "title": "Introducci√≥n a PHP",
            "description": "Conocer√°s qu√© es PHP, su historia y c√≥mo integrarlo en tus proyectos web.",
            "lecciones": [
                {
                    "id": "a1",
                    "title": "¬øQu√© es PHP?",
                    "explicacion": "PHP (Hypertext Preprocessor) es un lenguaje de programaci√≥n de c√≥digo abierto usado principalmente para desarrollo web del lado del servidor. Permite crear p√°ginas din√°micas, manejar bases de datos y procesar formularios."
                },
                {
                    "id": "a2",
                    "title": "Historia de PHP",
                    "explicacion": "Creado por Rasmus Lerdorf en 1994, PHP ha evolucionado hasta convertirse en uno de los lenguajes m√°s usados en desarrollo web, especialmente para CMS y aplicaciones web din√°micas."
                },
                {
                    "id": "a3",
                    "title": "Instalaci√≥n y entorno",
                    "explicacion": "Para usar PHP necesitas un servidor local como XAMPP, WAMP o MAMP, o un servidor en la nube. Los archivos PHP se ejecutan en el servidor y generan HTML que el navegador interpreta."
                }
            ],
            "video": "",
            "dato": "PHP es perfecto para crear sitios web din√°micos que interact√∫an con bases de datos y usuarios."
        },
        {
            "id": 2,
            "title": "Variables, tipos y operadores",
            "description": "Aprender√°s a almacenar datos en PHP y realizar operaciones b√°sicas.",
            "lecciones": [
                {
                    "id": "b1",
                    "title": "Variables en PHP",
                    "explicacion": "En PHP todas las variables comienzan con `$`, por ejemplo: `$nombre = 'Angelo';`. No es necesario declarar el tipo expl√≠citamente."
                },
                {
                    "id": "b2",
                    "title": "Tipos de datos",
                    "explicacion": "PHP maneja `string`, `int`, `float`, `bool`, `array`, `object` y `NULL`. Los arrays y objetos permiten manejar datos complejos."
                },
                {
                    "id": "b3",
                    "title": "Operadores",
                    "explicacion": "Incluyen aritm√©ticos (`+`, `-`, `*`, `/`, `%`), de comparaci√≥n (`==`, `===`, `!=`), l√≥gicos (`&&`, `||`, `!`) y de asignaci√≥n (`=`, `+=`, `-=`)."
                }
            ],
            "video": "",
            "dato": "Entender variables, tipos y operadores es esencial para cualquier l√≥gica en PHP."
        },
        {
            "id": 3,
            "title": "Condicionales y bucles",
            "description": "Controla el flujo de ejecuci√≥n con decisiones y repeticiones.",
            "lecciones": [
                {
                    "id": "c1",
                    "title": "Condicionales",
                    "explicacion": "PHP permite usar `if`, `elseif` y `else` para ejecutar c√≥digo seg√∫n condiciones: `if($edad >= 18) { echo 'Mayor'; } else { echo 'Menor'; }`."
                },
                {
                    "id": "c2",
                    "title": "Bucles for y while",
                    "explicacion": "Los bucles `for`, `while` y `foreach` permiten repetir acciones. `foreach` es √∫til para recorrer arrays: `foreach($frutas as $fruta) { echo $fruta; }`."
                },
                {
                    "id": "c3",
                    "title": "Break y continue",
                    "explicacion": "`break` detiene un bucle, y `continue` salta a la siguiente iteraci√≥n. √ötiles para controlar flujo dentro de loops."
                }
            ],
            "video": "",
            "dato": "Condicionales y bucles son la base para crear l√≥gica din√°mica en PHP."
        },
        {
            "id": 4,
            "title": "Funciones y manejo de formularios",
            "description": "Aprender√°s a organizar c√≥digo en funciones y procesar datos enviados por usuarios.",
            "lecciones": [
                {
                    "id": "d1",
                    "title": "Funciones en PHP",
                    "explicacion": "Se definen con `function nombre($parametros) { }`. Permiten encapsular c√≥digo y reutilizarlo f√°cilmente."
                },
                {
                    "id": "d2",
                    "title": "Par√°metros y retorno",
                    "explicacion": "Las funciones pueden recibir par√°metros y devolver valores con `return`: `function sumar($a, $b) { return $a + $b; }`."
                },
                {
                    "id": "d3",
                    "title": "Procesando formularios",
                    "explicacion": "PHP procesa datos enviados desde formularios HTML usando `$_GET` y `$_POST`. Ejemplo: `$nombre = $_POST['nombre']; echo 'Hola '.$nombre;`."
                }
            ],
            "video": "",
            "dato": "Funciones y formularios son clave para crear aplicaciones web interactivas."
        },
        {
            "id": 5,
            "title": "Arrays y manejo de datos",
            "description": "Aprender√°s a manejar colecciones de datos y trabajar con estructuras m√°s complejas.",
            "lecciones": [
                {
                    "id": "e1",
                    "title": "Arrays",
                    "explicacion": "Los arrays almacenan m√∫ltiples valores: `$frutas = array('manzana','banana');`. M√©todos comunes incluyen `count()`, `array_push()`, `array_merge()`."
                },
                {
                    "id": "e2",
                    "title": "Arrays asociativos",
                    "explicacion": "Permiten usar claves personalizadas: `$persona = array('nombre'=>'Angelo','edad'=>14); echo $persona['nombre'];`."
                },
                {
                    "id": "e3",
                    "title": "Iterando arrays",
                    "explicacion": "Usa `foreach` para recorrer arrays f√°cilmente: `foreach($frutas as $fruta) { echo $fruta; }`."
                }
            ],
            "video": "",
            "dato": "Arrays y arrays asociativos permiten organizar y acceder a datos de forma eficiente."
        },
        {
            "id": 6,
            "title": "PHP avanzado y buenas pr√°cticas",
            "description": "Explora t√©cnicas modernas, seguridad y buenas pr√°cticas para crear aplicaciones robustas.",
            "lecciones": [
                {
                    "id": "f1",
                    "title": "Manejo de errores",
                    "explicacion": "PHP permite controlar errores con `try`, `catch` y funciones como `error_reporting()` y `set_error_handler()`."
                },
                {
                    "id": "f2",
                    "title": "Conexi√≥n a bases de datos",
                    "explicacion": "Se puede conectar a MySQL usando PDO o MySQLi: `$pdo = new PDO('mysql:host=localhost;dbname=miDB','usuario','clave');`."
                },
                {
                    "id": "f3",
                    "title": "Buenas pr√°cticas",
                    "explicacion": "Escribir c√≥digo limpio, modular, seguro y comentado garantiza proyectos mantenibles y profesionales."
                }
            ],
            "video": "",
            "dato": "PHP moderno, seguro y bien estructurado permite crear aplicaciones web robustas y profesionales."
        }
    ]
}
