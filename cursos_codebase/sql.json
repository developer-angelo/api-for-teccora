{
    "id": "sql",
    "name": "Curso intensivo de SQL y SQLite",
    "description": "Aprende SQL y SQLite para manejar bases de datos, almacenar informaci√≥n y consultarla de manera eficiente üóÑÔ∏è.",
    "modulos": [
        {
            "id": 1,
            "title": "Introducci√≥n a las bases de datos",
            "description": "Comprender√°s qu√© es una base de datos, tipos y c√≥mo se usa SQL para gestionarlas.",
            "lecciones": [
                {
                    "id": "a1",
                    "title": "¬øQu√© es una base de datos?",
                    "explicacion": "Una base de datos es un sistema organizado de informaci√≥n que permite almacenar, consultar y manipular datos de manera eficiente."
                },
                {
                    "id": "a2",
                    "title": "Tipos de bases de datos",
                    "explicacion": "Existen bases de datos relacionales (SQL) y no relacionales (NoSQL). SQLite es un motor de bases de datos SQL ligero y embebido, ideal para aplicaciones locales o m√≥viles."
                },
                {
                    "id": "a3",
                    "title": "Qu√© es SQL",
                    "explicacion": "SQL (Structured Query Language) es el lenguaje est√°ndar para interactuar con bases de datos relacionales: crear tablas, insertar datos, consultar informaci√≥n y modificar registros."
                }
            ],
            "video": "",
            "dato": "Aprender SQL es clave para cualquier desarrollador que trabaje con datos."
        },
        {
            "id": 2,
            "title": "Operaciones b√°sicas con SQL",
            "description": "Aprender√°s a crear, leer, actualizar y eliminar datos (CRUD) usando SQL.",
            "lecciones": [
                {
                    "id": "b1",
                    "title": "Crear tablas",
                    "explicacion": "Usamos `CREATE TABLE` para definir tablas y sus columnas: `CREATE TABLE usuarios(id INTEGER PRIMARY KEY, nombre TEXT, edad INTEGER);`"
                },
                {
                    "id": "b2",
                    "title": "Insertar datos",
                    "explicacion": "Se insertan registros con `INSERT INTO`: `INSERT INTO usuarios(nombre, edad) VALUES('Angelo', 14);`"
                },
                {
                    "id": "b3",
                    "title": "Consultar datos",
                    "explicacion": "La consulta b√°sica se realiza con `SELECT`: `SELECT * FROM usuarios;`. Podemos filtrar con `WHERE`, ordenar con `ORDER BY` y limitar resultados con `LIMIT`."
                },
                {
                    "id": "b4",
                    "title": "Actualizar y eliminar",
                    "explicacion": "Modificar registros con `UPDATE usuarios SET edad=15 WHERE nombre='Angelo';` y eliminar con `DELETE FROM usuarios WHERE id=1;`"
                }
            ],
            "video": "",
            "dato": "CRUD es la base para cualquier operaci√≥n con bases de datos."
        },
        {
            "id": 3,
            "title": "Consultas avanzadas",
            "description": "Aprender√°s a usar filtros, operadores, funciones y combinaciones de tablas para consultas m√°s complejas.",
            "lecciones": [
                {
                    "id": "c1",
                    "title": "Filtros y operadores",
                    "explicacion": "Usa operadores como `=`, `>`, `<`, `>=`, `<=`, `<>` y combinaciones con `AND`, `OR`, `NOT` para filtrar datos."
                },
                {
                    "id": "c2",
                    "title": "Funciones agregadas",
                    "explicacion": "Funciones como `COUNT()`, `SUM()`, `AVG()`, `MIN()`, `MAX()` permiten calcular totales, promedios y estad√≠sticas de los datos."
                },
                {
                    "id": "c3",
                    "title": "Orden y agrupaci√≥n",
                    "explicacion": "`ORDER BY` ordena resultados y `GROUP BY` agrupa registros para aplicar funciones agregadas."
                }
            ],
            "video": "",
            "dato": "Estas funciones y filtros permiten analizar datos de manera r√°pida y eficiente."
        },
        {
            "id": 4,
            "title": "Relaciones y joins",
            "description": "Aprender√°s a relacionar tablas y extraer informaci√≥n combinada de m√∫ltiples fuentes.",
            "lecciones": [
                {
                    "id": "d1",
                    "title": "Claves primarias y for√°neas",
                    "explicacion": "Las claves primarias identifican registros √∫nicos y las for√°neas permiten relacionar tablas: `FOREIGN KEY (id_usuario) REFERENCES usuarios(id)`"
                },
                {
                    "id": "d2",
                    "title": "INNER JOIN",
                    "explicacion": "Combina registros de dos tablas donde existe coincidencia: `SELECT usuarios.nombre, pedidos.total FROM usuarios INNER JOIN pedidos ON usuarios.id = pedidos.id_usuario;`"
                },
                {
                    "id": "d3",
                    "title": "LEFT JOIN y RIGHT JOIN",
                    "explicacion": "LEFT JOIN incluye todos los registros de la tabla izquierda aunque no tengan coincidencia. RIGHT JOIN hace lo mismo con la tabla derecha."
                }
            ],
            "video": "",
            "dato": "Los joins permiten consultar datos de m√∫ltiples tablas de manera coherente."
        },
        {
            "id": 5,
            "title": "SQLite espec√≠fico",
            "description": "Aprender√°s las particularidades de SQLite y c√≥mo usarlo en proyectos locales y m√≥viles.",
            "lecciones": [
                {
                    "id": "e1",
                    "title": "Instalaci√≥n y uso b√°sico",
                    "explicacion": "SQLite es un motor de base de datos embebido. No requiere servidor. Se usa creando un archivo `.db` y ejecutando consultas SQL desde c√≥digo o herramientas como DB Browser."
                },
                {
                    "id": "e2",
                    "title": "Tipos de datos en SQLite",
                    "explicacion": "SQLite tiene tipos din√°micos: `INTEGER`, `REAL`, `TEXT`, `BLOB` y `NULL`. Permite gran flexibilidad, aunque es recomendable mantener consistencia."
                },
                {
                    "id": "e3",
                    "title": "Integraci√≥n con aplicaciones",
                    "explicacion": "SQLite se integra f√°cilmente con Python (`sqlite3`), JavaScript (Electron) y otras plataformas para aplicaciones locales sin necesidad de servidor."
                }
            ],
            "video": "",
            "dato": "SQLite es ideal para apps m√≥viles, prototipos y proyectos locales por su ligereza y simplicidad."
        },
        {
            "id": 6,
            "title": "Buenas pr√°cticas y optimizaci√≥n",
            "description": "Aprender√°s c√≥mo escribir consultas eficientes y mantener bases de datos seguras y organizadas.",
            "lecciones": [
                {
                    "id": "f1",
                    "title": "Normalizaci√≥n",
                    "explicacion": "Organizar datos en tablas evitando duplicados y redundancia mejora consistencia y rendimiento."
                },
                {
                    "id": "f2",
                    "title": "√çndices",
                    "explicacion": "Crear √≠ndices en columnas frecuentemente consultadas mejora la velocidad de b√∫squeda."
                },
                {
                    "id": "f3",
                    "title": "Seguridad b√°sica",
                    "explicacion": "Evitar inyecciones SQL usando sentencias preparadas (`prepared statements`) y validaci√≥n de datos."
                }
            ],
            "video": "",
            "dato": "Bases de datos bien dise√±adas y seguras son la clave para aplicaciones robustas y eficientes."
        }
    ]
}
